{"version":3,"sources":["assets/twitter-logo.svg","App.js","index.js"],"names":["TWITTER_HANDLE","TWITTER_LINK","concat","App","_useState","useState","_useState2","_slicedToArray","walletAddress","setWalletAddress","checkIfWalletIsConnected","_ref","_asyncToGenerator","_regeneratorRuntime","mark","_callee","_window","_window$solana","response","wrap","_context","prev","next","window","solana","isPhantom","console","log","connect","onlyIfTrusted","sent","publicKey","toString","alert","stop","apply","arguments","connectWallet","_ref2","_callee2","_window2","_context2","useEffect","onLoad","_ref3","_callee3","_context3","addEventListener","removeEventListener","_jsx","className","children","_jsxs","onClick","alt","src","twitterLogo","href","target","rel","ReactDOM","render","React","StrictMode","document","getElementById"],"mappings":"+OAAe,MAA0B,yC,eCKnCA,EAAiB,cACjBC,EAAY,uBAAAC,OAA0BF,GA+E7BG,EA7EH,WAEV,IAAAC,EAA0CC,mBAAS,MAAKC,EAAAC,YAAAH,EAAA,GAAjDI,EAAaF,EAAA,GAAEG,EAAgBH,EAAA,GAGhCI,EAAwB,eAAAC,EAAAC,YAAAC,cAAAC,MAAG,SAAAC,IAAA,IAAAC,EAAAC,EAAAC,EAAA,OAAAL,cAAAM,MAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,UACrB,QADqBN,EAC3BO,cAAM,IAAAP,GAAQ,QAARC,EAAND,EAAQQ,cAAM,IAAAP,IAAdA,EAAgBQ,UAAS,CAAAL,EAAAE,KAAA,QACU,OAArCI,QAAQC,IAAI,yBAAyBP,EAAAE,KAAA,EACdC,OAAOC,OAAOI,QAAQ,CAAEC,eAAe,IAAQ,KAAD,EAA/DX,EAAQE,EAAAU,KACdJ,QAAQC,IACN,6BACAT,EAASa,UAAUC,YAMrBvB,EAAiBS,EAASa,UAAUC,YAAYZ,EAAAE,KAAA,gBAEhDW,MAAM,8DAAoD,yBAAAb,EAAAc,OAAA,GAAAnB,EAAA,KAE7D,kBAhB6B,OAAAJ,EAAAwB,MAAA,KAAAC,UAAA,KAkBxBC,EAAa,eAAAC,EAAA1B,YAAAC,cAAAC,MAAG,SAAAyB,IAAA,IAAAC,EAAAhB,EAAAN,EAAA,OAAAL,cAAAM,MAAA,SAAAsB,GAAA,cAAAA,EAAApB,KAAAoB,EAAAnB,MAAA,OACN,GADMkB,EACDjB,SAAXC,EAAMgB,EAANhB,QAEG,CAADiB,EAAAnB,KAAA,eAAAmB,EAAAnB,KAAA,EACeE,EAAOI,UAAU,KAAD,EAAjCV,EAAQuB,EAAAX,KACdJ,QAAQC,IAAI,6BAA8BT,EAASa,UAAUC,YAC7DvB,EAAiBS,EAASa,UAAUC,YAAY,wBAAAS,EAAAP,OAAA,GAAAK,EAAA,KAEnD,kBARkB,OAAAD,EAAAH,MAAA,KAAAC,UAAA,KA4BnB,OARAM,qBAAU,WACR,IAAMC,EAAM,eAAAC,EAAAhC,YAAAC,cAAAC,MAAG,SAAA+B,IAAA,OAAAhC,cAAAM,MAAA,SAAA2B,GAAA,cAAAA,EAAAzB,KAAAyB,EAAAxB,MAAA,cAAAwB,EAAAxB,KAAA,EACPZ,IAA2B,KAAD,mBAAAoC,EAAAZ,OAAA,GAAAW,EAAA,KACjC,kBAFW,OAAAD,EAAAT,MAAA,KAAAC,UAAA,KAIZ,OADAb,OAAOwB,iBAAiB,OAAQJ,GACzB,kBAAMpB,OAAOyB,oBAAoB,OAAQL,EAAQ,CAC1D,GAAG,IAGDM,cAAA,OAAKC,UAAU,MAAKC,SAErBC,eAAA,OAAKF,UAAW1C,EAAgB,mBAAqB,YAAY2C,SAAA,CAC5DC,eAAA,OAAKF,UAAU,mBAAkBC,SAAA,CAC/BF,cAAA,KAAGC,UAAU,SAAQC,SAAC,4BACtBF,cAAA,KAAGC,UAAU,WAAUC,SAAC,sDAItB3C,GA3BRyC,cAAA,UACEC,UAAU,mCACVG,QAAShB,EAAcc,SACxB,yBA0BGC,eAAA,OAAKF,UAAU,mBAAkBC,SAAA,CAC/BF,cAAA,OAAKK,IAAI,eAAeJ,UAAU,eAAeK,IAAKC,IACtDP,cAAA,KACEC,UAAU,cACVO,KAAMxD,EACNyD,OAAO,SACPC,IAAI,aAAYR,SAAA,aAAAjD,OACHF,YAKzB,EC9EA4D,IAASC,OACPZ,cAACa,IAAMC,WAAU,CAAAZ,SACfF,cAAC9C,EAAG,MAEN6D,SAASC,eAAe,Q","file":"static/js/main.1ded69ec.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/twitter-logo.4844b78f.svg\";","import React, { useEffect, useState } from 'react';\r\nimport twitterLogo from './assets/twitter-logo.svg';\r\nimport './App.css';\r\n\r\n// Constants\r\nconst TWITTER_HANDLE = '_buildspace';\r\nconst TWITTER_LINK = `https://twitter.com/${TWITTER_HANDLE}`;\r\n\r\nconst App = () => {\r\n  // State\r\n  const [walletAddress, setWalletAddress] = useState(null);\r\n\r\n  // Actions\r\n  const checkIfWalletIsConnected = async () => {\r\n    if (window?.solana?.isPhantom) {\r\n      console.log('Phantom wallet found!');\r\n      const response = await window.solana.connect({ onlyIfTrusted: true });\r\n      console.log(\r\n        'Connected with Public Key:',\r\n        response.publicKey.toString()\r\n      );\r\n\r\n      /*\r\n       * Set the user's publicKey in state to be used later!\r\n       */\r\n      setWalletAddress(response.publicKey.toString());\r\n    } else {\r\n      alert('Solana object not found! Get a Phantom Wallet ðŸ‘»');\r\n    }\r\n  };\r\n\r\n  const connectWallet = async () => {\r\n    const { solana } = window;\r\n  \r\n    if (solana) {\r\n      const response = await solana.connect();\r\n      console.log('Connected with Public Key:', response.publicKey.toString());\r\n      setWalletAddress(response.publicKey.toString());\r\n    }\r\n  };\r\n\r\n  const renderNotConnectedContainer = () => (\r\n    <button\r\n      className=\"cta-button connect-wallet-button\"\r\n      onClick={connectWallet}\r\n    >\r\n      Connect to Wallet\r\n    </button>\r\n  );\r\n\r\n  // UseEffects\r\n  useEffect(() => {\r\n    const onLoad = async () => {\r\n      await checkIfWalletIsConnected();\r\n    };\r\n    window.addEventListener('load', onLoad);\r\n    return () => window.removeEventListener('load', onLoad);\r\n  }, []);\r\n\r\n  return (\r\n    <div className=\"App\">\r\n\t\t\t{/* This was solely added for some styling fanciness */}\r\n\t\t\t<div className={walletAddress ? 'authed-container' : 'container'}>\r\n        <div className=\"header-container\">\r\n          <p className=\"header\">ðŸ–¼ GIF Portal</p>\r\n          <p className=\"sub-text\">\r\n            View your GIF collection in the metaverse âœ¨\r\n          </p>\r\n          {/* Add the condition to show this only if we don't have a wallet address */}\r\n          {!walletAddress && renderNotConnectedContainer()}\r\n        </div>\r\n        <div className=\"footer-container\">\r\n          <img alt=\"Twitter Logo\" className=\"twitter-logo\" src={twitterLogo} />\r\n          <a\r\n            className=\"footer-text\"\r\n            href={TWITTER_LINK}\r\n            target=\"_blank\"\r\n            rel=\"noreferrer\"\r\n          >{`built on @${TWITTER_HANDLE}`}</a>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default App;","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n"],"sourceRoot":""}